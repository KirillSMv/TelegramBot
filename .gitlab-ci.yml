image: docker:27.0.3-dind
services:
  - docker:27.0.3-dind

variables:
  KUBECONFIG: "/builds/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/.kube/config"
  KUBECONFIG_CONTEXT: "cnrprod1737640949-team-83206"  # Убедитесь, что контекст правильный
  KUBERNETES_NAMESPACE: "cnrprod1737640949-team-83206"  # Используйте тот же namespace

before_script:
  - apk update && apk add curl bash
  - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash  # Установка Helm
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.24.0/bin/linux/amd64/kubectl  # Установка kubectl
  - chmod +x ./kubectl  # Даем права на выполнение
  - mv ./kubectl /usr/local/bin/kubectl  # Перемещаем kubectl в /usr/local/bin
  - kubectl config use-context $KUBECONFIG_CONTEXT  # Устанавливаем контекст
  - kubectl config set-context --current --namespace=$KUBERNETES_NAMESPACE  # Убедитесь, что namespace правильный

stages:
  - deploy

deploy_prometheus:
  stage: deploy
  script:
    - kubectl get pods  # Проверка связи с кластером
    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts  # Добавляем репозиторий Helm
    - helm repo update  # Обновляем репозитории
    - helm upgrade --install prometheus prometheus-community/prometheus --namespace $KUBERNETES_NAMESPACE --set prometheus.server.persistentVolume.enabled=false --set rbac.create=false --set kube-state-metrics.enabled=false
  tags:
    - runner
    - build
    - k8s

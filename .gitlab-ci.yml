image: docker:27.0.3  # Базовый образ для выполнения CI/CD

services:
  - docker:27.0.3-dind  # Docker-in-Docker для сборки образов

variables:
  KUBECONFIG_CONTEXT: "cnrprod1737640949-team-83206"  # Контекст для kubectl
  KUBERNETES_NAMESPACE: "cnrprod1737640949-team-83206"  # Namespace для деплоя в Kubernetes
  IMAGE_NAME: "registry.gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/app:latest"  # Имя Docker-образа
  DOCKER_TLS_CERTDIR: ""  # Отключение использования TLS для Docker-in-Docker

stages:
  - build
  - deploy

build_app:
  stage: build
  script:
    - echo "Переход в директорию с Dockerfile..."
    - cd develop/backend/data-storage  # Переход в директорию с Dockerfile
    - echo "Сборка Docker-образа..."
    - docker build -t $IMAGE_NAME .  # Сборка Docker-образа
    - echo "Авторизация в контейнерном реестре..."
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin  # Логин в реестр
    - echo "Пуш Docker-образа в реестр..."
    - docker push $IMAGE_NAME  # Пуш в реестр
  tags:
    - build
    - runner
    - k8s

deploy_app:
  stage: deploy
  image: alpine:3.18  # Используем легковесный образ для работы с Helm и kubectl
  before_script:
    - apk add --no-cache bash curl  # Устанавливаем bash и curl
    - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash  # Устанавливаем Helm
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.24.0/bin/linux/amd64/kubectl  # Устанавливаем kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl  # Перемещаем kubectl в системный путь
    - kubectl config use-context $KUBECONFIG_CONTEXT  # Используем правильный контекст
    - kubectl config set-context --current --namespace=$KUBERNETES_NAMESPACE  # Устанавливаем namespace для kubectl
  script:
    - echo "Обновляем Helm-чарт..."
    - helm upgrade --install app ./helm-chart --set image.repository=$CI_REGISTRY_IMAGE --set image.tag=latest --namespace=$KUBERNETES_NAMESPACE  # Деплой с использованием Helm
  tags:
    - build
    - runner
    - k8s
